syntax  = "proto3";

package pb;

option go_package = "/proto";

// 执行屏蔽词
message DoReq {
  string str = 1;
  string sub = 2;
}

message DoResp {
  string str = 1;
  string sub = 2;
  string time = 3;
}

// 添加屏蔽词
message AddReq {
  string word = 1;
}

message AddResp {
  int64 code = 1;
  string msg = 2;
}

// 删除屏蔽词
message DelReq {
  string word = 1;
}

message DelResp {
  int64 code = 1;
  string msg = 2;
}

// 查看屏蔽词
message GetReq {

}

message GetResp {
  repeated string list = 1;
}

// 添加白名单词语
message WhiteWordAddReq {
  string word = 1;
}

message WhiteWordAddResp {
  int64 code = 1;
  string msg = 2;
}

// 删除白名单词语
message WhiteWordDelReq {
  string word = 1;
}

message WhiteWordDelResp {
  int64 code = 1;
  string msg = 2;
}

// 查看白名单词语
message WhiteWordGetReq {

}

message WhiteWordGetResp {
  repeated string list = 1;
}

// 是否存在非法词
message IsHaveReq {
  string str = 1;
}

message IsHaveResp {
  int32 isHave = 1;
}

// 是否存在非法词并返回
message IsHaveListReq {
  string str = 1;
}

message IsHaveListResp {
  int32 isHave = 1;
  repeated string list = 2;
}

service BlockwordRPC {
  rpc Do (DoReq) returns (DoResp);
  rpc Add (AddReq) returns (AddResp);
  rpc Del(DelReq) returns (DelResp);
  rpc Get(GetReq) returns (GetResp);
  rpc WhiteWordAdd (WhiteWordAddReq) returns (WhiteWordAddResp);
  rpc WhiteWordDel(WhiteWordDelReq) returns (WhiteWordDelResp);
  rpc WhiteWordGet(WhiteWordGetReq) returns (WhiteWordGetResp);
  rpc IsHave(IsHaveReq) returns (IsHaveResp);
  rpc IsHaveList(IsHaveListReq) returns (IsHaveListResp);
}