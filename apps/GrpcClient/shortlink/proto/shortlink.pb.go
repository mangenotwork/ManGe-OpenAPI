// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: shortlink.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url           string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                                             // 目的地址
	Aging         int64    `protobuf:"varint,2,opt,name=aging,proto3" json:"aging,omitempty"`                                        // 时效，单位秒
	Deadline      int64    `protobuf:"varint,3,opt,name=deadline,proto3" json:"deadline,omitempty"`                                  // 截止日期， 单位时间戳, 只有当Aging为0时才用
	IsPrivacy     bool     `protobuf:"varint,4,opt,name=is_privacy,json=isPrivacy,proto3" json:"is_privacy,omitempty"`               // 是否隐私
	Password      string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`                                   // 只有当IsPrivacy=true使用
	OpenBlockList bool     `protobuf:"varint,6,opt,name=open_block_list,json=openBlockList,proto3" json:"open_block_list,omitempty"` // 是否启用黑名单，启用后黑名单不能访问
	BlockList     []string `protobuf:"bytes,7,rep,name=block_list,json=blockList,proto3" json:"block_list,omitempty"`                // 访问黑名单， OpenBlockList=true使用
	OpenWhiteList bool     `protobuf:"varint,8,opt,name=open_white_list,json=openWhiteList,proto3" json:"open_white_list,omitempty"` // 是否启用白名单，启用后只有白名单才能访问
	WhiteList     []string `protobuf:"bytes,9,rep,name=white_list,json=whiteList,proto3" json:"white_list,omitempty"`                // 访问白名单， OpenWhiteList=true使用
}

func (x *AddReq) Reset() {
	*x = AddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortlink_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReq) ProtoMessage() {}

func (x *AddReq) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReq.ProtoReflect.Descriptor instead.
func (*AddReq) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{0}
}

func (x *AddReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AddReq) GetAging() int64 {
	if x != nil {
		return x.Aging
	}
	return 0
}

func (x *AddReq) GetDeadline() int64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *AddReq) GetIsPrivacy() bool {
	if x != nil {
		return x.IsPrivacy
	}
	return false
}

func (x *AddReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddReq) GetOpenBlockList() bool {
	if x != nil {
		return x.OpenBlockList
	}
	return false
}

func (x *AddReq) GetBlockList() []string {
	if x != nil {
		return x.BlockList
	}
	return nil
}

func (x *AddReq) GetOpenWhiteList() bool {
	if x != nil {
		return x.OpenWhiteList
	}
	return false
}

func (x *AddReq) GetWhiteList() []string {
	if x != nil {
		return x.WhiteList
	}
	return nil
}

type AddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Expire   string `protobuf:"bytes,3,opt,name=expire,proto3" json:"expire,omitempty"`
}

func (x *AddResp) Reset() {
	*x = AddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortlink_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResp) ProtoMessage() {}

func (x *AddResp) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResp.ProtoReflect.Descriptor instead.
func (*AddResp) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{1}
}

func (x *AddResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AddResp) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddResp) GetExpire() string {
	if x != nil {
		return x.Expire
	}
	return ""
}

type ModifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortLink     string   `protobuf:"bytes,1,opt,name=short_link,json=shortLink,proto3" json:"short_link,omitempty"`                //短链接地址
	Url           string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`                                             // 目的地址
	Aging         int64    `protobuf:"varint,3,opt,name=aging,proto3" json:"aging,omitempty"`                                        // 时效，单位秒
	Deadline      int64    `protobuf:"varint,4,opt,name=deadline,proto3" json:"deadline,omitempty"`                                  // 截止日期， 单位时间戳, 只有当Aging为0时才用
	IsPrivacy     bool     `protobuf:"varint,5,opt,name=is_privacy,json=isPrivacy,proto3" json:"is_privacy,omitempty"`               // 是否隐私
	Password      string   `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`                                   // 只有当IsPrivacy=true使用
	OpenBlockList bool     `protobuf:"varint,7,opt,name=open_block_list,json=openBlockList,proto3" json:"open_block_list,omitempty"` // 是否启用黑名单，启用后黑名单不能访问
	BlockList     []string `protobuf:"bytes,8,rep,name=block_list,json=blockList,proto3" json:"block_list,omitempty"`                // 访问黑名单， OpenBlockList=true使用
	OpenWhiteList bool     `protobuf:"varint,9,opt,name=open_white_list,json=openWhiteList,proto3" json:"open_white_list,omitempty"` // 是否启用白名单，启用后只有白名单才能访问
	WhiteList     []string `protobuf:"bytes,10,rep,name=white_list,json=whiteList,proto3" json:"white_list,omitempty"`               // 访问白名单， OpenWhiteList=true使用
}

func (x *ModifyReq) Reset() {
	*x = ModifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortlink_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyReq) ProtoMessage() {}

func (x *ModifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyReq.ProtoReflect.Descriptor instead.
func (*ModifyReq) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{2}
}

func (x *ModifyReq) GetShortLink() string {
	if x != nil {
		return x.ShortLink
	}
	return ""
}

func (x *ModifyReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ModifyReq) GetAging() int64 {
	if x != nil {
		return x.Aging
	}
	return 0
}

func (x *ModifyReq) GetDeadline() int64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *ModifyReq) GetIsPrivacy() bool {
	if x != nil {
		return x.IsPrivacy
	}
	return false
}

func (x *ModifyReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ModifyReq) GetOpenBlockList() bool {
	if x != nil {
		return x.OpenBlockList
	}
	return false
}

func (x *ModifyReq) GetBlockList() []string {
	if x != nil {
		return x.BlockList
	}
	return nil
}

func (x *ModifyReq) GetOpenWhiteList() bool {
	if x != nil {
		return x.OpenWhiteList
	}
	return false
}

func (x *ModifyReq) GetWhiteList() []string {
	if x != nil {
		return x.WhiteList
	}
	return nil
}

type ModifyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ModifyResp) Reset() {
	*x = ModifyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortlink_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyResp) ProtoMessage() {}

func (x *ModifyResp) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyResp.ProtoReflect.Descriptor instead.
func (*ModifyResp) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{3}
}

func (x *ModifyResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortLink string `protobuf:"bytes,1,opt,name=short_link,json=shortLink,proto3" json:"short_link,omitempty"` //短链接地址
}

func (x *GetReq) Reset() {
	*x = GetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortlink_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReq) ProtoMessage() {}

func (x *GetReq) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReq.ProtoReflect.Descriptor instead.
func (*GetReq) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{4}
}

func (x *GetReq) GetShortLink() string {
	if x != nil {
		return x.ShortLink
	}
	return ""
}

type GetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Short         string   `protobuf:"bytes,1,opt,name=short,proto3" json:"short,omitempty"`
	Url           string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Expiration    int64    `protobuf:"varint,3,opt,name=expiration,proto3" json:"expiration,omitempty"`                              // 过期时间
	IsPrivacy     bool     `protobuf:"varint,4,opt,name=isPrivacy,proto3" json:"isPrivacy,omitempty"`                                // 是否隐私
	Password      string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`                                   // 只有当IsPrivacy=true使用
	Creation      int64    `protobuf:"varint,6,opt,name=creation,proto3" json:"creation,omitempty"`                                  // 创建时间
	View          int64    `protobuf:"varint,7,opt,name=view,proto3" json:"view,omitempty"`                                          // 请求次数
	OpenBlockList bool     `protobuf:"varint,8,opt,name=open_block_list,json=openBlockList,proto3" json:"open_block_list,omitempty"` // 是否启用黑名单，启用后黑名单不能访问
	OpenWhiteList bool     `protobuf:"varint,9,opt,name=open_white_list,json=openWhiteList,proto3" json:"open_white_list,omitempty"` // 是否启用白名单，启用后只有白名单才能访问
	BlockList     []string `protobuf:"bytes,10,rep,name=block_list,json=blockList,proto3" json:"block_list,omitempty"`
	WhiteList     []string `protobuf:"bytes,11,rep,name=white_list,json=whiteList,proto3" json:"white_list,omitempty"`
}

func (x *GetResp) Reset() {
	*x = GetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortlink_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResp) ProtoMessage() {}

func (x *GetResp) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResp.ProtoReflect.Descriptor instead.
func (*GetResp) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{5}
}

func (x *GetResp) GetShort() string {
	if x != nil {
		return x.Short
	}
	return ""
}

func (x *GetResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetResp) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *GetResp) GetIsPrivacy() bool {
	if x != nil {
		return x.IsPrivacy
	}
	return false
}

func (x *GetResp) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *GetResp) GetCreation() int64 {
	if x != nil {
		return x.Creation
	}
	return 0
}

func (x *GetResp) GetView() int64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetResp) GetOpenBlockList() bool {
	if x != nil {
		return x.OpenBlockList
	}
	return false
}

func (x *GetResp) GetOpenWhiteList() bool {
	if x != nil {
		return x.OpenWhiteList
	}
	return false
}

func (x *GetResp) GetBlockList() []string {
	if x != nil {
		return x.BlockList
	}
	return nil
}

func (x *GetResp) GetWhiteList() []string {
	if x != nil {
		return x.WhiteList
	}
	return nil
}

type DelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortLink string `protobuf:"bytes,1,opt,name=short_link,json=shortLink,proto3" json:"short_link,omitempty"` //短链接地址
	Password  string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *DelReq) Reset() {
	*x = DelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortlink_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelReq) ProtoMessage() {}

func (x *DelReq) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelReq.ProtoReflect.Descriptor instead.
func (*DelReq) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{6}
}

func (x *DelReq) GetShortLink() string {
	if x != nil {
		return x.ShortLink
	}
	return ""
}

func (x *DelReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type DelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DelResp) Reset() {
	*x = DelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortlink_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelResp) ProtoMessage() {}

func (x *DelResp) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelResp.ProtoReflect.Descriptor instead.
func (*DelResp) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{7}
}

func (x *DelResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_shortlink_proto protoreflect.FileDescriptor

var file_shortlink_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x95, 0x02, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4f, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0xb7,
	0x02, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x27, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x22, 0xc9, 0x02, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x76, 0x69, 0x65,
	0x77, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x43, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x1d, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x32, 0x97, 0x01, 0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x50, 0x43, 0x12, 0x1e, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a,
	0x03, 0x47, 0x65, 0x74, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a,
	0x03, 0x44, 0x65, 0x6c, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x42, 0x08, 0x5a,
	0x06, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shortlink_proto_rawDescOnce sync.Once
	file_shortlink_proto_rawDescData = file_shortlink_proto_rawDesc
)

func file_shortlink_proto_rawDescGZIP() []byte {
	file_shortlink_proto_rawDescOnce.Do(func() {
		file_shortlink_proto_rawDescData = protoimpl.X.CompressGZIP(file_shortlink_proto_rawDescData)
	})
	return file_shortlink_proto_rawDescData
}

var file_shortlink_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_shortlink_proto_goTypes = []interface{}{
	(*AddReq)(nil),     // 0: pb.AddReq
	(*AddResp)(nil),    // 1: pb.AddResp
	(*ModifyReq)(nil),  // 2: pb.ModifyReq
	(*ModifyResp)(nil), // 3: pb.ModifyResp
	(*GetReq)(nil),     // 4: pb.GetReq
	(*GetResp)(nil),    // 5: pb.GetResp
	(*DelReq)(nil),     // 6: pb.DelReq
	(*DelResp)(nil),    // 7: pb.DelResp
}
var file_shortlink_proto_depIdxs = []int32{
	0, // 0: pb.ShortLinkRPC.Add:input_type -> pb.AddReq
	2, // 1: pb.ShortLinkRPC.Modify:input_type -> pb.ModifyReq
	4, // 2: pb.ShortLinkRPC.Get:input_type -> pb.GetReq
	6, // 3: pb.ShortLinkRPC.Del:input_type -> pb.DelReq
	1, // 4: pb.ShortLinkRPC.Add:output_type -> pb.AddResp
	3, // 5: pb.ShortLinkRPC.Modify:output_type -> pb.ModifyResp
	5, // 6: pb.ShortLinkRPC.Get:output_type -> pb.GetResp
	7, // 7: pb.ShortLinkRPC.Del:output_type -> pb.DelResp
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_shortlink_proto_init() }
func file_shortlink_proto_init() {
	if File_shortlink_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shortlink_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortlink_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortlink_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortlink_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortlink_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortlink_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortlink_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortlink_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shortlink_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shortlink_proto_goTypes,
		DependencyIndexes: file_shortlink_proto_depIdxs,
		MessageInfos:      file_shortlink_proto_msgTypes,
	}.Build()
	File_shortlink_proto = out.File
	file_shortlink_proto_rawDesc = nil
	file_shortlink_proto_goTypes = nil
	file_shortlink_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ShortLinkRPCClient is the client API for ShortLinkRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShortLinkRPCClient interface {
	Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error)
	Modify(ctx context.Context, in *ModifyReq, opts ...grpc.CallOption) (*ModifyResp, error)
	Get(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*GetResp, error)
	Del(ctx context.Context, in *DelReq, opts ...grpc.CallOption) (*DelResp, error)
}

type shortLinkRPCClient struct {
	cc grpc.ClientConnInterface
}

func NewShortLinkRPCClient(cc grpc.ClientConnInterface) ShortLinkRPCClient {
	return &shortLinkRPCClient{cc}
}

func (c *shortLinkRPCClient) Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error) {
	out := new(AddResp)
	err := c.cc.Invoke(ctx, "/pb.ShortLinkRPC/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shortLinkRPCClient) Modify(ctx context.Context, in *ModifyReq, opts ...grpc.CallOption) (*ModifyResp, error) {
	out := new(ModifyResp)
	err := c.cc.Invoke(ctx, "/pb.ShortLinkRPC/Modify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shortLinkRPCClient) Get(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*GetResp, error) {
	out := new(GetResp)
	err := c.cc.Invoke(ctx, "/pb.ShortLinkRPC/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shortLinkRPCClient) Del(ctx context.Context, in *DelReq, opts ...grpc.CallOption) (*DelResp, error) {
	out := new(DelResp)
	err := c.cc.Invoke(ctx, "/pb.ShortLinkRPC/Del", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShortLinkRPCServer is the server API for ShortLinkRPC service.
type ShortLinkRPCServer interface {
	Add(context.Context, *AddReq) (*AddResp, error)
	Modify(context.Context, *ModifyReq) (*ModifyResp, error)
	Get(context.Context, *GetReq) (*GetResp, error)
	Del(context.Context, *DelReq) (*DelResp, error)
}

// UnimplementedShortLinkRPCServer can be embedded to have forward compatible implementations.
type UnimplementedShortLinkRPCServer struct {
}

func (*UnimplementedShortLinkRPCServer) Add(context.Context, *AddReq) (*AddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedShortLinkRPCServer) Modify(context.Context, *ModifyReq) (*ModifyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Modify not implemented")
}
func (*UnimplementedShortLinkRPCServer) Get(context.Context, *GetReq) (*GetResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedShortLinkRPCServer) Del(context.Context, *DelReq) (*DelResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Del not implemented")
}

func RegisterShortLinkRPCServer(s *grpc.Server, srv ShortLinkRPCServer) {
	s.RegisterService(&_ShortLinkRPC_serviceDesc, srv)
}

func _ShortLinkRPC_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShortLinkRPCServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShortLinkRPC/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShortLinkRPCServer).Add(ctx, req.(*AddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShortLinkRPC_Modify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShortLinkRPCServer).Modify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShortLinkRPC/Modify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShortLinkRPCServer).Modify(ctx, req.(*ModifyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShortLinkRPC_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShortLinkRPCServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShortLinkRPC/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShortLinkRPCServer).Get(ctx, req.(*GetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShortLinkRPC_Del_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShortLinkRPCServer).Del(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShortLinkRPC/Del",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShortLinkRPCServer).Del(ctx, req.(*DelReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShortLinkRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ShortLinkRPC",
	HandlerType: (*ShortLinkRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _ShortLinkRPC_Add_Handler,
		},
		{
			MethodName: "Modify",
			Handler:    _ShortLinkRPC_Modify_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ShortLinkRPC_Get_Handler,
		},
		{
			MethodName: "Del",
			Handler:    _ShortLinkRPC_Del_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shortlink.proto",
}
